name: Update Diary Index

on:
  push:
    paths:
      - "diary/*.md" # Trigger only when Markdown files in the diary folder are updated
  workflow_dispatch: # Allow manual triggering of the workflow

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python (used for parsing Markdown and generating JSON)
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.9

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      # Step 4: Generate index.json with path validation
      - name: Generate diary index
        run: |
          python <<EOF
          import os
          import yaml
          import json

          diary_dir = "diary"
          output_file = os.path.join(diary_dir, "index.json")

          # Ensure the directory exists
          if not os.path.isdir(diary_dir):
              raise ValueError(f"Directory '{diary_dir}' does not exist.")

          entries = []
          for filename in os.listdir(diary_dir):
              # Validate file extension and sanitize path
              if not filename.endswith(".md"):
                  continue
              if "/" in filename or "\\" in filename:
                  raise ValueError(f"Invalid filename detected: {filename}")

              filepath = os.path.join(diary_dir, filename)
              with open(filepath, "r", encoding="utf-8") as f:
                  content = f.read()
                  if content.startswith("---"):
                      frontmatter, _ = content.split("---", 2)[1:]
                      metadata = yaml.safe_load(frontmatter)
                      entries.append({
                          "title": metadata.get("title", filename.replace(".md", "")),
                          "date": metadata.get("date", "Unknown Date"),
                          "slug": filename.replace(".md", "")
                      })

          with open(output_file, "w", encoding="utf-8") as f:
              json.dump(entries, f, indent=2)

          print(f"Generated {output_file} with {len(entries)} entries.")
          EOF

      # Step 5: Commit and push changes
      - name: Commit and push changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add diary/index.json
          git commit -m "Update diary index.json"
          git push
