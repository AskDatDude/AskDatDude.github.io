name: Update Projects Index

on:
  push:
    paths:
      - 'projects/*.md'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-index:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Debug repository structure
      run: ls -R

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install

    - name: Update projects index.json
      run: |
        node <<EOF
        const fs = require('fs');
        const path = require('path');

        const projectsDir = path.join(__dirname, 'projects');
        const indexFile = path.join(__dirname, 'projects/index.json');

        const files = fs.readdirSync(projectsDir).filter(file => file.endsWith('.md'));

        const projects = files.map(file => {
          const content = fs.readFileSync(path.join(projectsDir, file), 'utf-8');
          const metadataMatch = content.match(/<!--- metadata\s*([\s\S]+?)--->/) ;
          if (!metadataMatch) return null;

          const metadata = Object.fromEntries(
            metadataMatch[1]
              .split('\n')
              .filter(line => line.trim() && line.includes(':')) // Ignore empty lines and invalid lines
              .map(line => {
                const [key, ...valueParts] = line.split(':');
                return [key.trim(), valueParts.join(':').trim()];
              })
          );

          return {
            id: metadata.id || '',
            title: metadata.title || '',
            subtitle: metadata.subtitle || '',
            date: metadata.date || '',
            url: metadata.url || '',
            image: metadata.image || '',
            imageAlt: metadata.imageAlt || '',
            tags: metadata.tags ? JSON.parse(metadata.tags) : []
          };
        }).filter(project => project);

        fs.writeFileSync(indexFile, JSON.stringify(projects, null, 2));
        EOF

    - name: Commit and push changes
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git add projects/index.json
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Update projects index.json"
          git push
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
